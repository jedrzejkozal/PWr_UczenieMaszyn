import numpy as np

from postprocessing.processResults import ProcessResults
from postprocessing.utils import saveResults

arg = {'yale': {'CNN': {'fit_time': np.array([7.13481331, 4.90593147, 4.93253016, 5.1416297 , 5.82007742,
   5.74940324, 5.72810149, 6.50335622, 6.16525364, 6.14956307]), 'score_time': np.array([0.03124094, 0.01504135, 0.01561809, 0.02094388, 0.01813316,
   0.02801466, 0.01562095, 0.02293873, 0.02493286, 0.02393556]), 'test_score': np.array([0.86666667, 0.93333333, 0.93333333, 0.8       , 0.93333333,
   0.93333333, 0.86666667, 0.86666667, 0.86666667, 0.73333333]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([0.75697803, 0.85072684, 0.8497293 , 0.84773469, 0.87167263,
   0.87665629, 0.83975601, 0.86867833, 0.8427496 , 0.81681895]), 'score_time': np.array([0.0029912 , 0.00199389, 0.00199699, 0.00099659, 0.00199318,
   0.00199461, 0.00199389, 0.00099635, 0.00199437, 0.00199127]), 'test_score': np.array([0.93333333, 0.93333333, 0.93333333, 0.93333333, 0.93333333,
   1.        , 0.93333333, 1.        , 0.93333333, 0.93333333]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([0.82280064, 0.81881094, 0.81681752, 0.73403692, 0.74201775,
   0.76396227, 0.68816161, 0.82878566, 0.78689742, 0.69514203]), 'score_time': np.array([0.00797629, 0.00798178, 0.00698066, 0.00797725, 0.00697899,
   0.00697613, 0.00698042, 0.00598335, 0.00698018, 0.00897503]), 'test_score': np.array([0.8       , 0.86666667, 0.73333333, 0.53333333, 0.8       ,
   1.        , 0.86666667, 0.73333333, 0.66666667, 0.4       ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'essex:': {'CNN': {'fit_time': np.array([190.45093822, 181.79607368, 184.87539053, 186.9602201 ,
   186.17515182, 187.25883651, 192.03593636, 184.15952921,
   183.71708298, 198.36969423]), 'score_time': np.array([1.82670212, 1.77028656, 1.60399103, 1.80680633, 1.85313964,
   1.91327453, 2.02231407, 1.87228251, 1.81769133, 1.95878768]), 'test_score': np.array([0.98852041, 0.98852041, 0.9872449 , 0.98086735, 0.98086735,
   0.96173469, 0.98341837, 0.98596939, 0.98596939, 0.98333333]), 'train_score': np.array([1.        , 1.        , 1.        , 1.        , 1.        ,
   0.99177538, 1.        , 1.        , 1.        , 1.        ])}, 'LDA': {'fit_time': np.array([227.78524828, 210.54077029, 210.26896238, 221.56997108,
   220.87370253, 228.80387807, 222.40883756, 211.83746362,
   217.40804005, 217.07854366]), 'score_time': np.array([0.12496734, 0.11743045, 0.14058828, 0.12496638, 0.14059234,
   0.13858175, 0.13507295, 0.10272527, 0.10272455, 0.10571599]), 'test_score': np.array([0.91581633, 0.90178571, 0.9005102 , 0.91581633, 0.89158163,
   0.89795918, 0.89923469, 0.90688776, 0.91071429, 0.89487179]), 'train_score': np.array([1.        , 1.        , 0.9998582 , 1.        , 1.        ,
   0.99744753, 1.        , 1.        , 1.        , 1.        ])}, 'PCA': {'fit_time': np.array([23.5939281 , 21.32499266, 21.89646506, 24.28208733, 21.99320698,
   21.44566965, 17.8582623 , 22.21461415, 22.38914847, 19.97659707]), 'score_time': np.array([0.07280469, 0.07081151, 0.07879066, 0.0708096 , 0.07180643,
   0.06881738, 0.07180905, 0.07180858, 0.0678184 , 0.07380509]), 'test_score': np.array([0.91836735, 0.91454082, 0.90816327, 0.90561224, 0.89413265,
   0.8877551 , 0.88392857, 0.91071429, 0.9119898 , 0.93076923]), 'train_score': np.array([1.        , 1.        , 1.        , 1.        , 1.        ,
   1.        , 0.98071469, 1.        , 1.        , 0.99362245])}}, 'vidtimit': {'CNN': {'fit_time': np.array([690.08510208, 667.62526035, 667.9112916 , 678.01527262,
   671.5436542 , 697.23401308, 696.50247121, 793.51353002,
   771.284127  , 761.02734041]), 'score_time': np.array([6.60763025, 6.09939861, 6.13845205, 6.52221227, 6.18256283,
   7.49612164, 7.28157663, 7.55818295, 8.57062149, 8.66435695]), 'test_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([ 909.89410806,  887.48349714,  929.04439187,  915.37078905,
    961.09159803,  966.37421489, 1044.32080865,  974.56501436,
    940.83796191, 1173.00684309]), 'score_time': np.array([0.42730451, 0.36321568, 0.33296633, 0.49268389, 0.51562047,
   0.3833878 , 0.45264649, 0.39435768, 0.50175595, 0.40060711]), 'test_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([51.87090421, 92.74387622, 59.61154509, 88.53969097, 55.41349411,
   58.67136025, 73.41575408, 52.73422408, 70.95412421, 55.46089959]), 'score_time': np.array([0.38636994, 0.4016192 , 0.39855433, 0.3435626 , 0.37128091,
   0.34429598, 0.34251094, 0.37805343, 0.32804561, 0.34309626]), 'test_score': np.array([0.99938499, 1.        , 1.        , 1.        , 1.        ,
   1.        , 1.        , 1.        , 0.99969155, 1.        ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'att:': {'CNN': {'fit_time': np.array([17.50183368, 14.72038984, 14.9056747 , 14.85628438, 15.19236445,
   15.054528  , 15.59406471, 16.9030664 , 15.32311606, 15.67791533]), 'score_time': np.array([0.10931611, 0.09619021, 0.11385131, 0.0937252 , 0.10627532,
   0.09020901, 0.10931683, 0.09372759, 0.10813022, 0.10934901]), 'test_score': np.array([0.975, 0.95 , 0.975, 0.875, 0.95 , 0.975, 0.95 , 0.975, 0.9  ,
   0.9  ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([2.02558184, 2.02693105, 2.04265976, 2.03577662, 2.06131911,
   2.0791738 , 2.04701447, 2.04286098, 2.09867239, 2.02218819]), 'score_time': np.array([0.        , 0.        , 0.01562047, 0.0049839 , 0.01562071,
   0.01565361, 0.        , 0.        , 0.        , 0.        ]), 'test_score': np.array([0.975, 0.925, 0.975, 1.   , 0.95 , 0.975, 1.   , 0.975, 0.95 ,
   0.95 ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([1.71718311, 1.58494473, 1.84319353, 1.84373808, 1.80649757,
   1.73498082, 1.76215482, 1.5602603 , 1.50210977, 1.57826972]), 'score_time': np.array([0.00997186, 0.        , 0.        , 0.01562119, 0.01562119,
   0.        , 0.01561999, 0.01562071, 0.01562071, 0.        ]), 'test_score': np.array([0.875, 0.825, 0.85 , 0.75 , 0.825, 0.85 , 0.875, 0.85 , 0.775,
   0.75 ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'caltec:': {'CNN': {'fit_time': np.array([15.27354407, 15.66789985, 15.80049109, 15.63273048, 16.21746731,
   16.24058127, 16.04493713, 16.73714542, 16.96417308, 16.58403587]), 'score_time': np.array([0.12497354, 0.10934806, 0.12497067, 0.10934782, 0.12497139,
   0.10934901, 0.10934854, 0.10573077, 0.09578371, 0.0937283 ]), 'test_score': np.array([0.95918367, 0.97727273, 1.        , 1.        , 1.        ,
   0.94871795, 1.        , 1.        , 1.        , 0.97058824]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([2.05922008, 2.03375745, 1.97037411, 1.99552178, 1.99949026,
   1.99930048, 1.99930668, 2.03754187, 2.08502388, 2.08071923]), 'score_time': np.array([0.        , 0.        , 0.        , 0.        , 0.00216293,
   0.        , 0.        , 0.        , 0.01562166, 0.01561928]), 'test_score': np.array([1.   , 1.   , 1.   , 1.   , 0.975, 1.   , 1.   , 1.   , 1.   ,
   1.   ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([1.42519188, 1.31221151, 1.62174416, 1.67741036, 1.5742445 ,
   1.43647599, 1.39176464, 1.73969507, 1.63498044, 1.56821632]), 'score_time': np.array([0.        , 0.01562119, 0.        , 0.        , 0.01561189,
   0.01562953, 0.        , 0.        , 0.01561689, 0.01561618]), 'test_score': np.array([0.79591837, 0.90909091, 0.92682927, 0.85      , 0.85      ,
   0.8974359 , 0.89473684, 0.92105263, 0.83333333, 0.97058824]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'georgia': {'CNN': {'fit_time': np.array([28.49724317, 28.81081057, 33.81892037, 38.21282315, 37.39201117,
   36.93118167, 38.58567023, 38.53640866, 33.55310369, 32.82624865]), 'score_time': np.array([0.28740907, 0.28069019, 0.45581746, 0.47685075, 0.43909955,
   0.22043204, 0.21869302, 0.23936033, 0.16755271, 0.17153931]), 'test_score': np.array([0.8 , 0.82, 0.79, 0.89, 0.81, 0.82, 0.86, 0.8 , 0.9 , 0.88]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([4.67550993, 4.72736382, 4.69781232, 4.91884923, 4.78122187,
   5.00562024, 5.07543278, 6.69111466, 6.69810534, 6.57636714]), 'score_time': np.array([0.00996375, 0.00997949, 0.01200318, 0.0119698 , 0.01196647,
   0.00498557, 0.00797915, 0.00797963, 0.00797081, 0.        ]), 'test_score': np.array([0.82, 0.79, 0.77, 0.84, 0.75, 0.84, 0.8 , 0.78, 0.76, 0.74]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([3.03452396, 3.24005914, 3.23925996, 3.38436723, 3.19971132,
   3.20125294, 3.30530834, 3.07224464, 3.27254152, 3.36542439]), 'score_time': np.array([0.03046966, 0.0156188 , 0.01565576, 0.0156219 , 0.01561379,
   0.01561451, 0.01561522, 0.01560307, 0.01556373, 0.01563215]), 'test_score': np.array([0.46, 0.57, 0.58, 0.5 , 0.53, 0.6 , 0.62, 0.54, 0.54, 0.56]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'jaffe': {'CNN': {'fit_time': np.array([11.7311995 , 11.29728723, 11.56871772, 11.75149155, 11.93004942,
   11.88563418, 12.09746099, 12.05702066, 12.18466759, 12.46528006]), 'score_time': np.array([0.07810736, 0.06248474, 0.06383109, 0.05288553, 0.05485177,
   0.05086589, 0.05385685, 0.05285835, 0.05583453, 0.05485368]), 'test_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([0.99932814, 1.01129723, 1.0302465 , 0.9684124 , 0.95744014,
   0.96143055, 0.97140312, 0.96641517, 0.96940899, 0.97140408]), 'score_time': np.array([0.00299239, 0.00299144, 0.00199485, 0.00199509, 0.00199294,
   0.00199389, 0.00199437, 0.00199533, 0.00199461, 0.0149591 ]), 'test_score': np.array([1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 1.  , 0.95]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([0.90458274, 0.92253566, 0.93450475, 0.83476877, 1.09407592,
   0.8716712 , 1.01528597, 0.86668372, 0.89959526, 0.81282759]), 'score_time': np.array([0.00798059, 0.00698066, 0.00697851, 0.00698018, 0.00797772,
   0.00797796, 0.00797963, 0.0079782 , 0.0079782 , 0.0079782 ]), 'test_score': np.array([1.       , 0.875    , 0.9047619, 1.       , 0.95     , 0.95     ,
   0.95     , 1.       , 0.95     , 0.95     ]), 'train_score': np.array([1.        , 1.        , 1.        , 1.        , 1.        ,
   1.        , 1.        , 0.99481865, 1.        , 0.99481865])}}, 'mit': {'CNN': {'fit_time': np.array([131.03589869, 141.92236328, 144.7966578 , 129.62406635,
   130.93905354, 130.69826984, 130.52259898, 133.37210059,
   133.4132936 , 142.66327739]), 'score_time': np.array([1.54686546, 2.01802421, 1.684901  , 1.45184183, 1.42625165,
   1.45704865, 1.47765326, 1.47902703, 1.49685931, 1.72830939]), 'test_score': np.array([0.9980315 , 0.99409449, 0.99802761, 0.99408284, 0.99799197,
   0.99799197, 0.99598394, 0.99798793, 0.99797571, 0.99795918]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([65.75598145, 65.24483204, 68.48330522, 66.54660821, 63.00698519,
   62.44060493, 61.60437298, 63.6991384 , 61.43154192, 61.44810319]), 'score_time': np.array([0.03121567, 0.03124213, 0.04403663, 0.03199196, 0.03002739,
   0.04682684, 0.03124261, 0.03119326, 0.03123975, 0.03120255]), 'test_score': np.array([0.96456693, 0.96653543, 0.96646943, 0.95857988, 0.96987952,
   0.97791165, 0.98192771, 0.9637827 , 0.98785425, 0.97142857]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([ 9.28993416, 12.40832305, 11.77438641, 13.46647668, 10.82894135,
   16.32605958,  9.86161661, 12.98224068, 13.93771458, 13.60328007]), 'score_time': np.array([0.04686379, 0.04682899, 0.04688835, 0.0624454 , 0.04686165,
   0.06083655, 0.06248522, 0.0520277 , 0.04686403, 0.04687142]), 'test_score': np.array([0.9980315 , 0.99015748, 0.99802761, 0.99605523, 0.99799197,
   0.99799197, 0.98995984, 0.99195171, 0.99595142, 0.9877551 ]), 'train_score': np.array([0.99888815, 1.        , 1.        , 1.        , 1.        ,
   1.        , 0.99933437, 0.99933452, 1.        , 1.        ])}}, 'muct': {'CNN': {'fit_time': np.array([ 120.95851517,  121.82019091,  119.92836261,  120.10606146,
   2137.92836642,  123.19817901,  125.38362646,  127.33456159,
    127.21758604,  128.88428831]), 'score_time': np.array([2.10357928, 1.78085899, 1.77968216, 1.78893328, 1.76523757,
   1.1412766 , 1.16925669, 1.16389227, 1.18886662, 1.18005466]), 'test_score': np.array([0.85473684, 0.84842105, 0.91368421, 0.84631579, 0.86105263,
   0.93115942, 0.90942029, 0.90942029, 0.91304348, 0.88405797]), 'train_score': np.array([0.99329268, 0.98719512, 1.        , 0.99329268, 0.99207317,
   1.        , 1.        , 1.        , 1.        , 1.        ])}, 'LDA': {'fit_time': np.array([40.03103757, 39.11584091, 38.99953794, 38.95962358, 38.93344426,
   43.54479051, 43.54455924, 43.28673863, 43.52908325, 43.49823284]), 'score_time': np.array([0.06248379, 0.06248784, 0.04686236, 0.06248546, 0.0468595 ,
   0.03127241, 0.0312438 , 0.03124118, 0.04686356, 0.03125024]), 'test_score': np.array([0.77263158, 0.78947368, 0.76842105, 0.76      , 0.78315789,
   0.77536232, 0.77173913, 0.75      , 0.76086957, 0.79710145]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([40.49052024, 38.670928  , 42.66981649, 33.24221563, 38.24893665,
   39.79544592, 35.53855467, 38.93631148, 42.73224926, 47.80130553]), 'score_time': np.array([0.04686308, 0.04686189, 0.04686117, 0.04686403, 0.04686499,
   0.03124452, 0.03124595, 0.01562572, 0.01562309, 0.0156219 ]), 'test_score': np.array([0.43578947, 0.46736842, 0.36842105, 0.43157895, 0.42947368,
   0.48913043, 0.47463768, 0.43478261, 0.51086957, 0.42028986]), 'train_score': np.array([1.        , 1.        , 1.        , 0.95457317, 1.        ,
   1.        , 0.95027307, 0.99971256, 0.99913768, 0.99971256])}}, 'specs-on-faces': {'CNN': {'fit_time': np.array([77.2571826 , 78.08349824, 79.14579916, 79.48755145, 81.88741088,
   82.39494085, 82.27806115, 92.900352  , 85.7602644 , 87.52639985]), 'score_time': np.array([0.93727827, 0.90602922, 0.85918021, 0.84355211, 0.79668927,
   0.78104019, 0.76548028, 1.03950977, 0.67169118, 0.93975234]), 'test_score': np.array([0.70989761, 0.73758865, 0.75849057, 0.79296875, 0.80658436,
   0.81092437, 0.82403433, 0.81900452, 0.90452261, 0.89119171]), 'train_score': np.array([1.        , 1.        , 1.        , 1.        , 1.        ,
   1.        , 1.        , 0.96684832, 1.        , 1.        ])}, 'LDA': {'fit_time': np.array([17.08975244, 17.40707493, 17.19909954, 18.57377911, 17.87081671,
   17.63649702, 17.76146388, 18.83937669, 18.97996759, 18.4644568 ]), 'score_time': np.array([0.03121591, 0.01562023, 0.03124142, 0.03123951, 0.01562166,
   0.03126764, 0.01564813, 0.03120708, 0.0312283 , 0.03123903]), 'test_score': np.array([0.59044369, 0.62056738, 0.66792453, 0.6640625 , 0.71193416,
   0.71428571, 0.73390558, 0.77828054, 0.81909548, 0.84455959]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([18.29263496, 11.45044279, 11.87221408, 11.21613336, 12.24713588,
   11.15364146, 11.59103656, 14.44974184, 12.903229  , 14.79338431]), 'score_time': np.array([0.03120017, 0.03126645, 0.03126645, 0.03120422, 0.03123951,
   0.03124285, 0.01562047, 0.03124762, 0.01561975, 0.01564932]), 'test_score': np.array([0.61433447, 0.65602837, 0.66415094, 0.69921875, 0.73251029,
   0.73529412, 0.75536481, 0.78280543, 0.82914573, 0.84974093]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'stirling': {'CNN': {'fit_time': np.array([20.17251348, 20.89962506, 21.18251038, 21.26064897, 21.69804311,
   21.21377563, 21.54653525, 21.66680336, 21.72931266, 21.93236351]), 'score_time': np.array([0.23431945, 0.12497044, 0.10934877, 0.12496924, 0.12496924,
   0.12494278, 0.12496924, 0.12496924, 0.12496853, 0.12499666]), 'test_score': np.array([0.97142857, 0.97297297, 0.88888889, 0.94444444, 0.97222222,
   0.97222222, 0.97222222, 0.97222222, 0.97222222, 0.91666667]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([3.5929141 , 3.76478052, 3.76470709, 3.81164217, 3.79598975,
   3.68663669, 3.74592018, 3.76477265, 3.71788049, 3.62414694]), 'score_time': np.array([0.        , 0.        , 0.0156188 , 0.        , 0.        ,
   0.        , 0.        , 0.01559258, 0.        , 0.01561952]), 'test_score': np.array([0.82857143, 0.97297297, 0.86111111, 0.97222222, 0.91666667,
   0.88888889, 0.86111111, 0.88888889, 0.94444444, 0.77777778]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([2.24950099, 2.8274672 , 2.37447357, 2.59318209, 2.31199741,
   2.31198788, 2.26509762, 2.17142153, 2.14015484, 2.59314585]), 'score_time': np.array([0.01561999, 0.01565623, 0.        , 0.        , 0.        ,
   0.0155921 , 0.01561928, 0.        , 0.01561737, 0.        ]), 'test_score': np.array([0.72857143, 0.75675676, 0.75      , 0.75      , 0.83333333,
   0.77777778, 0.75      , 0.72222222, 0.63888889, 0.72222222]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}, 'umist': {'CNN': {'fit_time': np.array([26.43766403, 26.21965218, 26.45450974, 27.50028753, 27.10302973,
   27.39187312, 27.59493661, 28.71955347, 28.34487796, 28.45404434]), 'score_time': np.array([0.23428798, 0.2343502 , 0.23431849, 0.21868348, 0.20307708,
   0.21869946, 0.18745613, 0.18745685, 0.18748116, 0.18747854]), 'test_score': np.array([1.        , 0.98484848, 0.984375  , 1.        , 0.93103448,
   0.98245614, 1.        , 0.98076923, 1.        , 1.        ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'LDA': {'fit_time': np.array([2.88994956, 2.96805668, 2.91419339, 2.92119575, 2.88994884,
   2.95243621, 2.92121887, 2.88678193, 2.96805811, 2.96805692]), 'score_time': np.array([0.        , 0.        , 0.01561975, 0.01562142, 0.01561975,
   0.        , 0.01559472, 0.01565981, 0.        , 0.        ]), 'test_score': np.array([1.        , 0.98484848, 0.984375  , 1.        , 1.        ,
   0.98245614, 0.98076923, 1.        , 0.98      , 1.        ]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}, 'PCA': {'fit_time': np.array([2.85870814, 2.7649796 , 2.42131019, 2.62439013, 2.85870814,
   2.92119408, 3.2336216 , 2.73376989, 2.68687367, 2.73373699]), 'score_time': np.array([0.01562238, 0.01562047, 0.01562238, 0.01562142, 0.01561952,
   0.0156188 , 0.01562047, 0.0155859 , 0.01562023, 0.        ]), 'test_score': np.array([0.98484848, 0.95454545, 0.984375  , 0.98387097, 0.96551724,
   0.96491228, 0.90384615, 0.96153846, 0.92      , 0.89583333]), 'train_score': np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}}}




p = ProcessResults()
p.process(arg, "NN")
